{"version":3,"file":"index.js","sources":["../../src/utils/applyDefaultProperties.ts","../../node_modules/.pnpm/defu@6.1.4/node_modules/defu/dist/defu.mjs","../../src/utils/elementWatch.ts","../../src/utils/filterProperties.ts","../../src/utils/getCurrentUrlMatchText.ts","../../src/utils/hiraToKana.ts","../../src/utils/isValidRegex.ts","../../src/utils/isValidSelector.ts","../../src/utils/kanaToFullWidth.ts","../../src/utils/kanaToHalfWidth.ts","../../src/utils/latinToZenkaku.ts","../../src/utils/normalizedWord.ts","../../src/utils/sleep.ts","../../src/utils/traverseTextNodes.ts","../../src/utils/watchElementRemoval.ts"],"sourcesContent":["/**\r\n *\r\n * @param obj\r\n * @param defaultObj\r\n * @returns defaultObjにのみ存在するpropertyをobjに追加します\r\n *\r\n */\r\nexport function applyDefaultProperties<T extends object>(obj: Partial<T>, defaultObj: T): T {\r\n  return Object.assign({}, defaultObj, obj)\r\n}","function isPlainObject(value) {\n  if (value === null || typeof value !== \"object\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  if (prototype !== null && prototype !== Object.prototype && Object.getPrototypeOf(prototype) !== null) {\n    return false;\n  }\n  if (Symbol.iterator in value) {\n    return false;\n  }\n  if (Symbol.toStringTag in value) {\n    return Object.prototype.toString.call(value) === \"[object Module]\";\n  }\n  return true;\n}\n\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\n  if (!isPlainObject(defaults)) {\n    return _defu(baseObject, {}, namespace, merger);\n  }\n  const object = Object.assign({}, defaults);\n  for (const key in baseObject) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = baseObject[key];\n    if (value === null || value === void 0) {\n      continue;\n    }\n    if (merger && merger(object, key, value, namespace)) {\n      continue;\n    }\n    if (Array.isArray(value) && Array.isArray(object[key])) {\n      object[key] = [...value, ...object[key]];\n    } else if (isPlainObject(value) && isPlainObject(object[key])) {\n      object[key] = _defu(\n        value,\n        object[key],\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\n        merger\n      );\n    } else {\n      object[key] = value;\n    }\n  }\n  return object;\n}\nfunction createDefu(merger) {\n  return (...arguments_) => (\n    // eslint-disable-next-line unicorn/no-array-reduce\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\n  );\n}\nconst defu = createDefu();\nconst defuFn = createDefu((object, key, currentValue) => {\n  if (object[key] !== void 0 && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\nconst defuArrayFn = createDefu((object, key, currentValue) => {\n  if (Array.isArray(object[key]) && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\n\nexport { createDefu, defu as default, defu, defuArrayFn, defuFn };\n","import defu from 'defu'\r\n\r\n/**\r\n * 指定要素以下を監視し、クエリに一致する新規要素（または既存要素）を検出してコールバックを実行する。\r\n */\r\nexport function elementWatch(\r\n  targetElement: HTMLElement,\r\n  query: string,\r\n  callback: (element: HTMLElement) => void,\r\n  options: MutationObserverInit | null = null\r\n): MutationObserver {\r\n  const defaultOptions: MutationObserverInit = {\r\n    childList: true,\r\n    subtree: true,\r\n  }\r\n\r\n  const observerOptions = defu(options ?? {}, defaultOptions)\r\n\r\n  // 初期状態の該当要素に対して実行\r\n  targetElement.querySelectorAll<HTMLElement>(query).forEach(callback)\r\n\r\n  const observer = new MutationObserver((mutations) => {\r\n    for (const mutation of mutations) {\r\n      for (const node of mutation.addedNodes) {\r\n        if (!(node instanceof HTMLElement)) continue\r\n\r\n        // ① 追加ノード自身が query にマッチする場合\r\n        if (node.matches(query)) callback(node)\r\n\r\n        // ② subtree が有効な場合、子孫要素も探索\r\n        if (observerOptions.subtree) {\r\n          node.querySelectorAll<HTMLElement>(query).forEach(callback)\r\n        }\r\n        // todo: その他オプションへの対応\r\n      }\r\n    }\r\n  })\r\n\r\n  observer.observe(targetElement, observerOptions)\r\n  return observer\r\n}\r\n","/**\r\n *\r\n * @param obj\r\n * @param defaultObj\r\n * @returns objectからdefaultObjectに存在しないプロパティを削除します\r\n *\r\n */\r\nexport function filterProperties<T extends object>(obj: Partial<T>, defaultObj: T): Partial<T> {\r\n  return Object.keys(defaultObj).reduce((acc, key) => {\r\n    if (key in obj) {\r\n      acc[key as keyof T] = obj[key as keyof T]!\r\n    }\r\n    return acc\r\n  }, {} as Partial<T>)\r\n}","export function getCurrentUrlMatchText(): string {\n  return `*://${location.hostname}/*`\n}","/**\r\n *\r\n * @param str\r\n * @returns 全角ひらがなをカタカナにします\r\n */\r\n\r\nexport function hiraToKana(str: string) {\r\n  return str.replace(/[\\u3041-\\u3096\\u30FC]/g, (m) =>\r\n    String.fromCharCode(m.charCodeAt(0) + 0x60))\r\n}","/**\n * 入力された文字列が有効な正規表現（RegExp）としてコンパイルできるかを確認する関数です。\n *\n * @param input 確認対象の文字列\n * @returns 有効な正規表現であれば true、文法エラーがあれば false を返します。\n * @throws SyntaxError 以外の予期せぬエラーが発生した場合、そのエラーを再スローします。\n */\nexport function isValidRegex(input: string): boolean {\n  try {\n    // new RegExp() で正規表現オブジェクトの作成を試みます。\n    // 無効な正規表現パターンであれば SyntaxError がスローされます。\n    new RegExp(input);\n\n    // エラーがスローされなければ、有効な正規表現です。\n    return true;\n  } catch (e) {\n    // 発生したエラーが SyntaxError であるかを確認します。\n    if (e instanceof SyntaxError) {\n      // SyntaxError の場合、無効な正規表現と判断し false を返します。\n      return false;\n    } else {\n      // SyntaxError 以外の予期せぬエラー（メモリ不足など）の場合は、\n      // 処理を止めずにそのエラーをそのままスローします。\n      throw e;\n    }\n  }\n}","/**\n * CSS セレクタとして有効かを判定する\n * @param selector 判定するセレクタ文字列\n * @returns 有効な場合は true、無効な場合は false\n */\nexport function isValidSelector(selector: string): boolean {\n  try {\n    document.createDocumentFragment().querySelector(selector)\n    return true\n  }\n  catch {\n    return false\n  }\n}\n","/**\r\n *\r\n * @param str\r\n * @returns ひらがな・カタカナを全角にします\r\n *\r\n */\r\n// https://qiita.com/noenture/items/8cb7b62c78be5c092564\r\nexport function kanaToFullWidth(str: string) {\r\n  //muddy\r\n  const D_MUD = 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポヴヷヺ'\r\n  const S_MUD = 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟｳﾞﾜﾞｦﾞ'\r\n  //kiyone\r\n  const D_KIY = 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホ'\r\n    + 'マミムメモヤユヨラリルレロワヲンァィゥェォッャュョ。、ー「」・'\r\n  const S_KIY = 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｯｬｭｮ｡､ｰ｢｣･'\r\n  const map: { [key: string]: string } = {}\r\n  for (let i = 0, len = D_MUD.length; i < len; i++) {\r\n    map[S_MUD.slice(i * 2, i * 2 + 2)] = D_MUD.slice(i, i + 1)\r\n  }\r\n  for (let i = 0, len = D_KIY.length; i < len; i++) {\r\n    map[S_KIY.slice(i, i + 1)] = D_KIY.slice(i, i + 1)\r\n  }\r\n  const re = new RegExp(Object.keys(map).join('|'), 'g')\r\n\r\n  return str.replace(re, (x: string) => map[x])\r\n}","/**\r\n *\r\n * @param str\r\n * @returns カタカナを全角にします\r\n *\r\n */\r\nexport function kanaToHalfWidth(str: string) {\r\n  // 濁音・半濁音\r\n  const D_MUD = 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポヴヷヺ'\r\n  const S_MUD = 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟｳﾞﾜﾞｦﾞ'\r\n  // 清音・記号\r\n  const D_KIY = 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホ'\r\n    + 'マミムメモヤユヨラリルレロワヲンァィゥェォッャュョ。、ー「」・'\r\n  const S_KIY = 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｯｬｭｮ｡､ｰ｢｣･'\r\n\r\n  const map: { [key: string]: string } = {}\r\n  // 濁音・半濁音の対応を作成（全角→半角）\r\n  for (let i = 0, len = D_MUD.length; i < len; i++) {\r\n    map[D_MUD.slice(i, i + 1)] = S_MUD.slice(i * 2, i * 2 + 2)\r\n  }\r\n  // 清音・記号の対応を作成（全角→半角）\r\n  for (let i = 0, len = D_KIY.length; i < len; i++) {\r\n    map[D_KIY.slice(i, i + 1)] = S_KIY.slice(i, i + 1)\r\n  }\r\n\r\n  const re = new RegExp(Object.keys(map).join('|'), 'g')\r\n\r\n  return str.replace(re, (x: string) => map[x])\r\n}\r\n","// 文字列を受け取り、半角英数字を全角に変換する関数\nexport function latinToZenkaku(text: string): string {\n  return text.replace(/[0-9A-Za-z]/g, (s) => {\n    return String.fromCharCode(s.charCodeAt(0) + 65248) // 全角へ変換\n  })\n}","import { hiraToKana } from \"./hiraToKana\";\nimport { kanaToFullWidth } from \"./kanaToFullWidth\";\n\n/**\n *\n * @param key\n * @returns 半角ｶﾅを全角カナに、ひらがなをカタカナに\n */\nexport const normalizedWord = (key: string = '') => kanaToFullWidth(hiraToKana(key))","/**\r\n *\r\n * @param int(msec)\r\n * @description await可能なsleep\r\n *\r\n */\r\nexport const sleep = (msec: number) => new Promise(resolve => setTimeout(resolve, msec))","/**\n * 指定した要素以下のすべてのテキストノードに対して callback を実行する\n *\n * @param element - 対象のルート要素\n * @param callback - 各 textContent に適用する関数\n */\nexport function traverseTextNodes(\n  element: Element,\n  callback: (text: string) => string\n): void {\n  const iterator = document.createNodeIterator(\n    element,\n    NodeFilter.SHOW_TEXT,\n    null\n  )\n\n  let node: Node | null\n  while ((node = iterator.nextNode())) {\n    node.textContent = callback(node.textContent ?? '')\n  }\n}\n","/**\r\n * 指定した DOM 要素がドキュメントから削除されたかを監視する関数\r\n *\r\n * @param element 監視対象の DOM 要素\r\n * @param callback 要素が削除されたときに実行されるコールバック関数\r\n * @param interval チェック間隔（ミリ秒）。デフォルトは1000ms（1秒）\r\n * @returns 監視を停止するためのクリーンアップ関数\r\n */\r\nexport const watchElementRemoval = (\r\n  element: Element,\r\n  callback: () => void,\r\n  interval: number = 1000 // デフォルトは1秒ごとにチェック\r\n) => {\r\n  // 要素が既にドキュメントに存在しない場合\r\n  if (!element.isConnected) {\r\n    console.warn('Element is not connected to the document, it might already be removed.')\r\n    callback() // 即座にコールバックを呼び出す\r\n    return\r\n  }\r\n\r\n  // 指定間隔で要素が削除されているかをチェックする\r\n  const checkInterval = setInterval(() => {\r\n    if (!element.isConnected) {\r\n      clearInterval(checkInterval) // チェックを停止\r\n      callback() // コールバックを実行\r\n    }\r\n  }, interval)\r\n\r\n  // 監視を停止するためのクリーンアップ関数を返す\r\n  return () => clearInterval(checkInterval)\r\n}\r\n"],"names":[],"mappings":"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","x_google_ignoreList":[1]}